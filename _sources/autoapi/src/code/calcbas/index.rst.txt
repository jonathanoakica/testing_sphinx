:py:mod:`src.code.calcbas`
==========================

.. py:module:: src.code.calcbas


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   src.code.calcbas.clean_text
   src.code.calcbas.find_a
   src.code.calcbas.find_b
   src.code.calcbas.find_c
   src.code.calcbas.find_delta
   src.code.calcbas.find_roots
   src.code.calcbas.calcbhaskara



.. py:function:: clean_text(text)

   Formats the user input.

   Text is made lowercase and spaces are removed .

   Parameters

   ----------

   text : str

       user string representing a quadratic equation



   Returns

   -------

   equation: str

       A string without spaces or uppercases.



   Example

   --------

   clean_text("4X**2 + 2x - 6")



.. py:function:: find_a(equation)

   Finds the A value in a quadratic equation.



   Takes the equation as input and checks if the A value is

   negative, positive, implicit or explicit.



   Parameters

   ----------

   equation : str

       user string representing a quadratic equation



   Returns

   -------

   a: int

       An integer value representing the A value.



   Example

   --------

   find_a("4x**2+2x-6")



.. py:function:: find_b(equation)

   Finds the B value in a quadratic equation.



   Takes the equation as input, uses find to locate the B value,

   and checks if the B value is negative or positive.



   Parameters

   ----------

   equation : str

       User string representing a quadratic equation



   Returns

   -------

   b: int

       An integer value representing the B value.



   Example

   --------

   find_b("4x**2+2x-6")



.. py:function:: find_c(equation)

   Finds the C value in a quadratic equation.



   Takes the equation as input, uses find to locate the C value,

   and checks if the C value is negative or positive.



   Parameters

   ----------

   equation : str

       User string representing a quadratic equation



   Returns

   -------

   c: int

       An integer value representing the C value.



   Example

   --------

   find_c("4x**2+2x-6")



.. py:function:: find_delta(a, b, c)

   Calculates the delta in a quadratic equation.



   Uses the B value to the power of 2 and subtracts the results

   of the multiplication between 4, a and c.



   Parameters

   ----------

   a : int

       A value extracted from the equation input



   b : int

       B value extracted from the equation input



   c : int

       C value extracted from the equation input



   Returns

   -------

   delta: int

       An integer value.



   Example

   --------

   find_delta(4, 2, -6)



.. py:function:: find_roots(a, b, delta)

   Calculates the X values called roots.



   Uses the negative value of B in two instances:

   - Subtracting B from the root of delta divided by twice the value of A

   - Adding B to the root of delta divided by twice the value of A



   Parameters

   ----------

   a : int

       A value extracted from the equation input



   b : int

       B value extracted from the equation input



   delta : int

       delta value obtained from the solve_delta function



   Returns

   -------

   x_1: int

       First root value for a given equation.



   x_2: int

       Second root value for a given equation.



   Example

   --------

   find_roots(4, 2, 100)



.. py:function:: calcbhaskara()

   Solves a quadratic equation.



   Uses the find a, b, c, delta, roots and clean_text functions

   to calculate the results of a quadratic equation.



   Parameters

   ----------

   None



   Returns

   -------

   a : int

       A value extracted from the equation input



   b : int

       B value extracted from the equation input



   c: int

       C value extracted from the equation input



   delta : int

       delta value obtained from the solve_delta function



   x_1: int

       First root value for a given equation.



   x_2: int

       Second root value for a given equation.



   Example

   --------

   calcbhaskara()



